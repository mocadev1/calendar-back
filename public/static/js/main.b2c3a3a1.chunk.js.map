{"version":3,"sources":["types/types.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoutes.js","router/PrivateRoutes.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","uiOpenModal","uiCloseModal","eventSetActive","eventLogout","eventStartAddNew","eventAddNew","eventClearActive","eventUpdated","eventDeleted","eventLoaded","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authStartTokenRenew","authLogout","initialState","events","activeEvent","calendarReducer","state","action","type","payload","map","e","id","filter","modalOpen","uiReducer","checking","authReducer","rootReducer","combineReducers","ui","calendar","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","eventClearActiveEvent","checkingFinish","login","user","logout","useForm","useState","formState","setFormState","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoutes","isAuthenticated","Component","component","rest","props","to","PrivateRoutes","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"kNA0BeA,EA1BD,CAGVC,YAAa,kBACbC,aAAc,mBAGdC,eAAgB,qBAChBC,YAAa,uBAEbC,iBAAkB,wBAClBC,YAAa,kBACbC,iBAAkB,uBAClBC,aAAc,wBACdC,aAAc,wBACdC,YAAa,wBAGbC,mBAAoB,qCACpBC,eAAgB,qBAChBC,UAAW,eACXC,kBAAmB,wBACnBC,oBAAqB,6BACrBC,WAAY,iBCTVC,EAAe,CAEjBC,OAAQ,GACRC,YAAa,MA8DFC,EAzDS,WAAqC,IAAnCC,EAAkC,uDAA1BJ,EAAcK,EAAY,uCAExD,OAASA,EAAOC,MAEZ,KAAKvB,EAAMG,eACP,OAAO,2BACAkB,GADP,IAEIF,YAAaG,EAAOE,UAG5B,KAAKxB,EAAMI,YACP,OAAO,eACAa,GAGX,KAAKjB,EAAMM,YACP,OAAO,2BACAe,GADP,IAEIH,OAAO,CAAGI,EAAOE,SAAX,mBAAuBH,EAAMH,WAG3C,KAAKlB,EAAMO,iBACP,OAAO,2BACAc,GADP,IAEIF,YAAa,OAGrB,KAAKnB,EAAMQ,aACP,OAAO,2BACAa,GADP,IAEIH,OAAQG,EAAMH,OAAOO,KACjB,SAAAC,GAAC,OAAMA,EAAEC,KAAOL,EAAOE,QAAQG,GAAOL,EAAOE,QAAUE,OAInE,KAAK1B,EAAMS,aACP,OAAO,2BACAY,GADP,IAEIH,OAAQG,EAAMH,OAAOU,QACjB,SAAAF,GAAC,OAAMA,EAAEC,KAAON,EAAMF,YAAYQ,MAEtCR,YAAa,OAGrB,KAAKnB,EAAMU,YACP,OAAO,2BACAW,GADP,IAEIH,OAAO,YAAMI,EAAOE,WAG5B,QACI,OAAOH,ICtEbJ,EAAe,CACjBY,WAAW,GA0BAC,EAvBG,WAAqC,IAAnCT,EAAkC,uDAA1BJ,EAAcK,EAAY,uCAElD,OAASA,EAAOC,MACZ,KAAKvB,EAAMC,YACP,OAAO,2BACAoB,GADP,IAEIQ,WAAW,IAGnB,KAAK7B,EAAME,aACP,OAAO,2BACAmB,GADP,IAEIQ,WAAW,IAInB,QACI,OAAOR,ICtBbJ,EAAe,CACjBc,UAAU,GAiCCC,EA5BK,WAAqC,IAAnCX,EAAkC,uDAA1BJ,EAAcK,EAAY,uCAEpD,OAASA,EAAOC,MAEZ,KAAKvB,EAAMa,UACP,OAAO,uCACAQ,GACAC,EAAOE,SAFd,IAGIO,UAAU,IAGlB,KAAK/B,EAAMW,mBACP,OAAO,2BACAU,GADP,IAEIU,UAAU,IAGlB,KAAK/B,EAAMgB,WACP,MAAO,CACHe,UAAU,GAGlB,QACI,OAAOV,ICnBJY,EANKC,YAAgB,CAChCC,GAAIL,EACJM,SAAUhB,EACViB,KAAML,ICHJM,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAU5FC,EAPDC,YACVV,EACAK,EACIM,YAAiBC,O,iECZnBC,EAAUC,kDAEVC,EAAoB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAE3CC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAgB,QAAXE,EACME,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAK5BQ,EAAiB,SAAET,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAX,MAGtCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,SAEnC,MAAgB,QAAXV,EACME,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,M,iBCrCrBY,EAAgB,WAAoB,IAAlB5C,EAAiB,uDAAR,GAEpC,OAAOA,EAAOO,KACV,SAAAsC,GAAK,kCACEA,GADF,IAEDC,IAAKC,IAAQF,EAAMC,KAAME,SACzBC,MAAOF,IAAQF,EAAMI,OAAQD,eCoCnC5D,EAAc,SAAEyD,GAAF,MAAc,CAE9BxC,KAAMvB,EAAMM,YACZkB,QAASuC,IAIAK,EAAwB,iBAAO,CAAE7C,KAAMvB,EAAMO,mBAwBpDC,EAAe,SAAEuD,GAAF,MAAc,CAC/BxC,KAAMvB,EAAMQ,aACZgB,QAASuC,IA0BPtD,EAAe,iBAAO,CAAEc,KAAMvB,EAAMS,eAyBpCC,EAAc,SAAEQ,GAAF,MAAe,CAC/BK,KAAMvB,EAAMU,YACZc,QAASN,IC1DPmD,EAAiB,iBAAO,CAAE9C,KAAMvB,EAAMW,qBAEtC2D,EAAQ,SAAEC,GAAF,MAAa,CACvBhD,KAAMvB,EAAMa,UACZW,QAAS+C,IAaPC,EAAS,iBAAO,CAAEjD,KAAMvB,EAAMgB,a,QC7DrByD,EApBC,WAA0B,IAAxBxD,EAAuB,uDAAR,GAE7B,EAAkCyD,mBAASzD,GAA3C,mBAAO0D,EAAP,KAAkBC,EAAlB,KAEMC,EAAQ,WACVD,EAAc3D,IAKZ6D,EAAoB,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAC1BH,EAAa,2BACND,GADK,kBAEPI,EAAOC,KAAOD,EAAOE,UAI9B,MAAO,CAACN,EAAWG,EAAmBD,I,eCoH3BK,EApIK,WAEhB,IAAMC,EAAWC,cAEjB,EAAoDX,EAAQ,CACxDY,OAAQ,iBACRC,UAAW,WAFf,mBAAQC,EAAR,KAAyBC,EAAzB,KAKQH,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAEhB,EAA0Db,EAAQ,CAC9DgB,MAAO,OACPC,OAAQ,iBACRC,WAAY,SACZC,WAAY,WAJhB,mBAAQC,EAAR,KAA4BC,EAA5B,KAQQL,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAmBnC,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SAtBF,SAAEtE,GFxBA,IAAEuE,EAAOC,EEyB3BxE,EAAEyE,iBAEFhB,GF3BoBc,EE2BEZ,EF3BKa,EE2BGZ,EF1BlC,uCAAO,WAAQH,GAAR,iBAAAiB,EAAA,sEAEgBpD,EAAmB,OAAQ,CAAEiD,QAAOC,YAAY,QAFhE,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG/C,EAHH,QAKOgD,IACN3C,aAAa4C,QAAQ,QAASjD,EAAKI,OACnCC,aAAa4C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDvB,EAAUb,EAAM,CACZqC,IAAKpD,EAAKoD,IACV3B,KAAMzB,EAAKyB,SAIf4B,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAf9B,2CAAP,yDE6CgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIxE,KAAK,OACLwE,UAAU,eACVgB,YAAY,SACZ/B,KAAK,SACLC,MAAQI,EACR2B,SAAWxB,MAGnB,qBAAKO,UAAU,aAAf,SACI,uBACIxE,KAAK,WACLwE,UAAU,eACVgB,YAAY,gBACZ/B,KAAK,YACLC,MAAQK,EACR0B,SAAWxB,MAGnB,qBAAKO,UAAU,aAAf,SACI,uBACIxE,KAAK,SACLwE,UAAU,YACVd,MAAM,kBAMtB,sBAAKc,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAjDC,SAAEtE,GAGrB,GAFAA,EAAEyE,iBAEGR,IAAeC,EAChB,OAAOgB,IAAKC,KAAK,QAAS,qCAAmC,SFZ5C,IAAE7B,EAAMiB,EAAOC,EEepCf,GFfuBH,EEeES,EFfIQ,EEeGP,EFfIQ,EEeIP,EFb5C,uCAAO,WAAQR,GAAR,iBAAAiB,EAAA,sEAEgBpD,EAAmB,WAAY,CAAEgC,OAAMiB,QAAOC,YAAY,QAF1E,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG/C,EAHH,QAKOgD,IACN3C,aAAa4C,QAAQ,QAASjD,EAAKI,OACnCC,aAAa4C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDvB,EAAUb,EAAM,CACZqC,IAAKpD,EAAKoD,IACV3B,KAAMzB,EAAKyB,SAGf4B,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAd9B,2CAAP,yDEuDgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIxE,KAAK,OACLwE,UAAU,eACVgB,YAAY,SACZ/B,KAAK,QACLC,MAAQQ,EACRuB,SAAWlB,MAGnB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,QACLwE,UAAU,eACVgB,YAAY,SACZ/B,KAAK,SACLC,MAAQS,EACRsB,SAAWlB,MAGnB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,WACLwE,UAAU,eACVgB,YAAY,gBACZ/B,KAAK,aACLC,MAAQU,EACRqB,SAAWlB,MAInB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,WACLwE,UAAU,eACVgB,YAAY,0BACZ/B,KAAK,aACLC,MAAQW,EACRoB,SAAWlB,MAInB,qBAAKC,UAAU,aAAf,SACI,uBACIxE,KAAK,SACLwE,UAAU,YACVd,MAAM,+B,QCjGvBgC,EA/BA,WAEX,IAAM9B,EAAWC,cAETJ,EAASkC,aAAY,SAAA7F,GAAK,OAAIA,EAAMgB,QAApC2C,KAQR,OACI,sBAAKe,UAAU,kCAAf,UAEI,sBAAMA,UAAU,eAAhB,SACMf,IAGN,yBACIe,UAAU,yBACVoB,QAfS,WAEjBhC,EHoEJ,uCAAO,WAAQA,GAAR,SAAAiB,EAAA,sDAEHxC,aAAawD,QAEbjC,EDxE0B,CAAE5D,KAAMvB,EAAMI,cCyExC+E,EAAUX,KALP,2CAAP,wDGzDQ,UAII,mBAAGuB,UAAU,wBACb,iDCZDsB,EAhBE,CACbC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNhE,MAAO,SACPiE,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCCJC,EAZO,SAAC,GAAgB,IAAbpE,EAAY,EAAZA,MAEdqE,EAAgBrE,EAAhBqE,MAAO7D,EAASR,EAATQ,KAEf,OACI,gCACI,uCAAW6D,EAAX,OACA,sCAAU7D,EAAKS,KAAf,W,iDCNC/E,GAAc,iBAAO,CAAEsB,KAAMvB,EAAMC,cCW1CoI,GAAe,CACjBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAIjBC,IAAMC,cAAc,SAEpB,IAAMC,GAAM9E,MAAS+E,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAaJ,GAAIK,QAAQF,IAAI,IAAK,SAGlCG,GAAY,CACdjB,MAAO,GACPkB,MAAO,GACPnF,MAAO4E,GAAI7E,SACXF,IAAKmF,GAAWjF,UAsKLqF,GAlKO,WAElB,IAAMpE,EAAWC,cACTvD,EAAcqF,aAAY,SAAA7F,GAAK,OAAIA,EAAMc,MAAzCN,UACAV,EAAgB+F,aAAY,SAAA7F,GAAK,OAAIA,EAAMe,YAA3CjB,YAER,EAA2BuD,mBAAUqE,GAAI7E,UAA/BsF,EAAV,oBACA,EAAyB9E,mBAAUyE,GAAWjF,UAApCuF,EAAV,oBACA,EAAoC/E,oBAAS,GAA7C,mBAAOgF,EAAP,KAAmBC,EAAnB,KAEA,EAAoCjF,mBAAU2E,IAA9C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEQP,EAA6BM,EAA7BN,MAAOlB,EAAsBwB,EAAtBxB,MAAOjE,EAAeyF,EAAfzF,MAAOH,EAAQ4F,EAAR5F,IAG7B8F,qBAAU,WAGFD,EADC1I,GAGckI,MAGpB,CAAElI,IAEL,IAAM2D,EAAoB,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAE1B8E,EAAc,2BACPD,GADM,kBAER7E,EAAOC,KAAOD,EAAOE,UAMxB8E,EAAa,WACf5E,EDtE2B,CAAE5D,KAAMvB,EAAME,eCuEzCiF,EAAUf,KACVyF,EAAeR,KA6CnB,OACI,eAAC,IAAD,CACIW,OAASnI,EAEToI,eAAiBF,EACjBG,MAAQ7B,GACR8B,eAAiB,IACjBpE,UAAU,QACVqE,iBAAiB,cAPrB,UAUI,6CAAWjJ,EAAc,gBAAkB,gBAA3C,OACA,uBACA,uBACI4E,UAAU,YACVC,SAzCa,SAAEtE,GACvBA,EAAEyE,iBAEF,IR9C0BpC,EQ8CpBsG,EAAcpG,IAAQE,GACtBmG,EAAYrG,IAAQD,GAE1B,OAAKqG,EAAYE,cAAeD,GACrB1D,IAAKC,KAAK,QAAS,oDAAqD,SAG9EuB,EAAMoC,OAAOC,OAAS,EAChBd,GAAc,IAIrBxE,EADChE,GRzDqB4C,EQ0DM6F,ERxDpC,uCAAO,WAAQzE,GAAR,iBAAAiB,EAAA,+EAIoB1C,EAAe,UAAD,OAAaK,EAAMpC,IAAOoC,EAAO,OAJnE,cAIOsC,EAJP,gBAKoBA,EAAKC,OALzB,QAKO/C,EALP,QAOWgD,GACNpB,EAAU3E,EAAcuD,IAExB6C,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAVlC,kDAeC4D,QAAQC,IAAR,MAfD,0DAAP,uDAzC4B,SAAE5G,GAC9B,8CAAO,WAAQoB,EAAUyF,GAAlB,uBAAAxE,EAAA,+DAEmBwE,IAAWvI,KAAzBsE,EAFL,EAEKA,IAAK3B,EAFV,EAEUA,KAFV,kBAMoBtB,EAAe,SAAUK,EAAO,QANpD,cAMOsC,EANP,gBAOoBA,EAAKC,OAPzB,QAOO/C,EAPP,QASWgD,KAENxC,EAAMpC,GAAK4B,EAAKsH,OAAOlJ,GACvBoC,EAAMQ,KAAO,CACXuG,IAAKnE,EACL3B,QAGFG,EAAU7E,EAAayD,KAjB5B,kDAuBC2G,QAAQC,IAAR,MAvBD,0DAAP,wDQkGkBtK,CAAkBuJ,IAGhCD,GAAc,QAEdI,MAiBI,UAKI,sBAAKhE,UAAU,aAAf,UACI,wDACA,cAAC,KAAD,CACIiB,SA/DU,SAAEtF,GAC5B8H,EAAc9H,GACdmI,EAAc,2BACPD,GADM,IAETzF,MAAOzC,MA4DKuD,MAAQd,EACR4B,UAAU,oBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,KAAD,CACIiB,SAhEQ,SAAEtF,GAC1B+H,EAAY/H,GACZmI,EAAc,2BACPD,GADM,IAET5F,IAAKtC,MA6DOuD,MAAQjB,EACR+G,QAAU5G,EACV4B,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACIxE,KAAK,OACLwE,UAAS,wBAAoB2D,GAAc,aAAlC,KACT3C,YAAY,uBACZ/B,KAAK,QACLC,MAAQmD,EACRpB,SAAWlC,EACXkG,aAAa,QAEjB,uBAAOrJ,GAAG,YAAYoE,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACIxE,KAAK,OACLwE,UAAU,eACVgB,YAAY,QACZkE,KAAK,IACLjG,KAAK,QACLC,MAAQqE,EACRtC,SAAWlC,IAEf,uBAAOnD,GAAG,YAAYoE,UAAU,uBAAhC,yCAGJ,yBACIxE,KAAK,SACLwE,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCxKLmF,GAnBG,WAEd,IAAM/F,EAAWC,cAOjB,OACI,wBACIW,UAAU,sBACVoB,QARe,WACnBhC,EAAUf,KACVe,EAAUlF,OAIV,SAII,mBAAG8F,UAAU,mBCIVoF,GAnBQ,WAEnB,IAAMhG,EAAWC,cAMjB,OACI,yBACIW,UAAU,4BACVoB,QAPa,WACjBhC,EVwEJ,uCAAO,WAAQA,EAAUyF,GAAlB,mBAAAxE,EAAA,6DAEKzE,EAAOiJ,IAAWxI,SAASjB,YAA3BQ,GAFL,kBAMoB+B,EAAe,UAAD,OAAa/B,GAAO,GAAI,UAN1D,cAMO0E,EANP,gBAOoBA,EAAKC,OAPzB,QAOO/C,EAPP,QASWgD,GACNpB,EAAU1E,KAEVmG,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAZlC,kDAiBC4D,QAAQC,IAAR,MAjBD,0DAAP,0DUpEI,UAII,mBAAG5E,UAAU,iBACb,sDCEZ9B,IAAOmH,OAAO,MAId,IAAMC,GAAYC,YAAgBrH,KAmFnBsH,GAjFQ,WAEnB,IAAMpG,EAAWC,cACTuB,EAAQO,aAAa,SAAA7F,GAAK,OAAIA,EAAMgB,QAApCsE,IACR,EAAgCO,aAAa,SAAA7F,GAAK,OAAIA,EAAMe,YAApDlB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YAEhB,EAAgCuD,mBAAUd,aAAaC,QAAQ,aAAgB,SAA/E,mBAAO2H,EAAP,KAAiBC,EAAjB,KAEA3B,qBAAU,WAEN3E,EXuEJ,uCAAO,WAAQA,GAAR,mBAAAiB,EAAA,+EAIoB1C,EAAe,UAJnC,cAIO2C,EAJP,gBAKoBA,EAAKC,OALzB,QAKO/C,EALP,QAOWgD,KACArF,EAAS4C,EAAeP,EAAKmI,SAEnCvG,EAAUzE,EAAaQ,KAV5B,kDAcCwJ,QAAQC,IAAR,MAdD,0DAAP,yDWrEG,CAAExF,IAkCL,OACI,sBAAKY,UAAU,kBAAf,UAEI,cAAC,EAAD,IAGA,cAAC,IAAD,CACIsF,UAAYA,GACZnK,OAASA,EACTyK,cAAc,QACdC,YAAY,MACZvE,SAAWA,EACXwE,gBA3Ba,SAAE9H,EAAOI,EAAOH,EAAK8H,GAU1C,MAAO,CACH5B,MATU,CACV6B,gBAAmBpF,IAAQ5C,EAAMQ,KAAKuG,IAAQ,UAAY,UAC1DkB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAqBHC,mBA7CU,SAAE1K,GACpByD,EAAUlF,OA6CFoM,cA1CU,SAAE3K,GACpByD,EXxCoC,CAExC5D,KAAMvB,EAAMG,eACZqB,QWqC8BE,KA0ClB4K,OAvCS,SAAE5K,GACnB+J,EAAY/J,GACZkC,aAAa4C,QAAQ,WAAY9E,IAsCzB6K,aAnCS,SAAE7K,GACnByD,EAAUf,MAmCFoI,YAAa,EACbC,KAAOjB,EACPkB,WAAY,CACR3I,MAAOoE,KAIf,cAAC,GAAD,IAEIhH,GAAe,cAAC,GAAD,IAGnB,cAAC,GAAD,Q,4CChFGwL,GAjBM,SAAC,GAIf,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBACF,OACI,cAAC,IAAD,2BACQA,GADR,IAEID,UAAY,SAACE,GAAD,OACNJ,EACA,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAiBG,S,mCCOpBE,GAlBO,SAAC,GAIhB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,cAAC,IAAD,2BACQA,GADR,IAEID,UAAY,SAACE,GAAD,OACNJ,EACM,cAACC,EAAD,eAAgBG,IAChB,cAAC,IAAD,CAAUC,GAAG,gBCuCtBE,GAzCG,WAGd,IAAMhI,EAAWC,cACjB,EAA0B8B,aAAa,SAAA7F,GAAK,OAAIA,EAAMgB,QAA9CN,EAAR,EAAQA,SAAU4E,EAAlB,EAAkBA,IAQlB,OANAmD,qBAAU,WAEN3E,Eb+BJ,uCAAO,WAAQA,GAAR,iBAAAiB,EAAA,sEAEgB1C,EAAgB,cAFhC,cAEG2C,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG/C,EAHH,QAKOgD,IACN3C,aAAa4C,QAAQ,QAASjD,EAAKI,OACnCC,aAAa4C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDvB,EAAUb,EAAM,CACZqC,IAAKpD,EAAKoD,IACV3B,KAAMzB,EAAKyB,SAGfG,EAAUd,KAdX,2CAAP,yDa7BG,CAAEc,IAEApD,EACO,2CAIR,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACI6K,kBAAoBjG,EACpByG,OAAK,EACLC,KAAK,SACLP,UAAY5H,IAGhB,cAAC,GAAD,CACI0H,kBAAoBjG,EACpByG,OAAK,EACLC,KAAK,IACLP,UAAYvB,KAGhB,cAAC,IAAD,CAAU0B,GAAG,cCjClBK,GARK,WAChB,OACI,cAAC,IAAD,CAAU5K,MAAQA,EAAlB,SACI,cAAC,GAAD,O,OCJZ6K,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.b2c3a3a1.chunk.js","sourcesContent":["const types = {\n\n    // UI\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    // Calendar\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActive: '[event] Clear Active',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n    // Auth\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renewal',\n    authLogout: '[auth] Logout'\n}\n\nexport default types;","import types from '../types/types';\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours').toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Omar'\n//     }\n// }\n\nconst initialState = {\n\n    events: [],\n    activeEvent: null\n    \n};\n\n\nconst calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [ action.payload, ...state.events]\n            }\n\n        case types.eventClearActive:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated: \n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted: \n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n        \n        default:\n            return state;\n    }\n    \n\n}\n\nexport default calendarReducer;","import types from '../types/types';\n\n\nconst initialState = {\n    modalOpen: false,\n};\n\nconst uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n\n\n        default:\n            return state;\n    }\n    \n};\n\n\nexport default uiReducer;","import types from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nconst authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout: \n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n    }\n    \n};\n\nexport default authReducer;","import { combineReducers } from 'redux';\n\nimport calendarReducer from './calendarReducer';\nimport uiReducer from './uiReducer';\nimport authReducer from './authReducer';\n\nconst rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});\n\nexport default rootReducer;","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\nexport default store;","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\n    \n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4000/api/auth\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n};\n\nconst fetchWithToken = ( endpoint, data, method='GET' ) => {\n\n    \n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4000/api/auth\n    const token = localStorage.getItem('token' || '');\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\n\nexport {\n    fetchWithoutToken,\n    fetchWithToken\n}\n","import moment from 'moment';\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        event => ({\n            ...event,\n            end: moment( event.end ).toDate(),\n            start: moment( event.start ).toDate()\n        })\n    );\n    \n}","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport types from '../types/types';\n\nexport const eventSetActive = ( event ) => ({\n    \n    type: types.eventSetActive,\n    payload: event\n\n});\n\nexport const eventLogout = () => ({ type: types.eventLogout });\n\nexport const eventStartAddNew = ( event ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n        \n        try {\n\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if ( body.ok ) {\n\n                event.id = body.evento.id;\n                event.user = {\n                  _id: uid,\n                  name\n                };\n                \n                dispatch( eventAddNew( event ) );\n                \n            }\n            \n            \n        } catch (error) {\n            console.log(error);\n        }\n        \n    }\n}\n\nconst eventAddNew = ( event ) => ({\n    \n    type: types.eventAddNew,\n    payload: event\n\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActive });\n\nexport const eventStartUpdate = ( event) => {\n    \n    return async ( dispatch ) => {\n\n        try {\n\n            const resp = await fetchWithToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n\n            const resp = await fetchWithToken( `events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n\n    return async ( dispatch ) => {\n\n        try {\n\n            const resp = await fetchWithToken('events')\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                const events = prepareEvents( body.eventos );\n\n                dispatch( eventLoaded( events ) );\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n        \n        \n    }\n}\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n})","import Swal from \"sweetalert2\";\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport types from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\n\nexport const startLogin = ( email, password ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n    }\n}\n\nexport const startRegister = ( name, email, password ) => {\n\n    return async ( dispatch ) => {\n\n        const resp = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n    \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n\n}\n\nexport const startChecking = () => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchWithToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n    \n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return async ( dispatch ) => {\n\n        localStorage.clear();\n        \n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\";\n\n/**\n * \n * @param {*} initialState Object containing the fields from a form you want to manage\n * \n * @returns [formState, handleInputchange] Current form state and a function to manage changes on the form fields \n */\nconst useForm = ( initialState = {} ) => {\n\n    const [formState, setFormState] = useState(initialState);\n\n    const reset = () => {\n        setFormState( initialState );\n    }\n    \n    \n    \n    const handleInputChange = ( { target } ) => {\n        setFormState({\n            ...formState,\n            [target.name]: target.value\n        })\n    }\n\n    return [formState, handleInputChange, reset];\n}\n\nexport default useForm","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\n\nimport useForm from '../../hooks/useForm';\n\nimport './login.css';\n\nconst LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'omar@gmail.com',\n        lPassword: '123456'\n    });\n    \n    const { lEmail, lPassword } = formLoginValues;\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'moca',\n        rEmail: 'moca@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n\n    });\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword) );\n    };\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben coincidir', 'error' );\n        }\n\n        dispatch( startRegister( rName, rEmail, rPassword1) );\n    }\n    \n    \n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword1\" \n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\" \n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen;","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nconst Navbar = () => {\n\n    const dispatch = useDispatch();\n    \n    const { name } = useSelector(state => state.auth );\n    \n    const handleLogout = () => {\n        \n        dispatch( startLogout() );\n        \n    }\n    \n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n\nexport default Navbar\n","const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};\n\nexport default messages;","import React from 'react'\n\nconst CalendarEvent = ( { event }) => {\n\n    const { title, user } = event;\n    \n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n\nexport default CalendarEvent\n","\nimport types from '../types/types';\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\n\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root'); // Binding modal to our AppElement (root)\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlusOne = now.clone().add('1', 'hours');\n\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlusOne.toDate()\n}\n\n\nconst CalendarModal = () => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui );\n    const { activeEvent } = useSelector(state => state.calendar );\n\n    const [ , setDateStart ] = useState( now.toDate() );\n    const [ , setDateEnd ] = useState( nowPlusOne.toDate() );\n    const [titleValid, setTitleValid] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n    \n\n    useEffect(() => {\n\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n        \n    }, [ activeEvent ]);\n    \n    const handleInputChange = ( { target } ) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n        \n    }\n    \n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    }\n\n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    }\n\n    const handleSubmitForm = ( e ) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error', 'La fecha de inicio debe de ser menor a la de fin.', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) );\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n        \n        setTitleValid(true);\n        \n        closeModal();\n    }\n    \n    \n    return (\n        <Modal\n            isOpen={ modalOpen }\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            closeTimeoutMS={ 200 }\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n\n            <h1> { `${ activeEvent ? 'Editar evento' : 'Nuevo Evento' }` } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ start }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ end }\n                        minDate={ start }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        \n        </Modal>\n    )\n}\n\nexport default CalendarModal\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventClearActiveEvent } from '../../actions/events';\nimport { uiOpenModal } from '../../actions/ui';\n\nconst AddNewFab = () => {\n     \n    const dispatch = useDispatch();\n    \n    const handleClickNew = () => {\n        dispatch( eventClearActiveEvent() );\n        dispatch( uiOpenModal() );\n    }\n    \n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n\nexport default AddNewFab\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nconst DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    };\n    \n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n\nexport default DeleteEventFab\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\n\nimport Navbar from '../ui/Navbar';\nimport messages from '../../helpers/calendar-messages-es';\nimport CalendarEvent from './CalendarEvent';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\n\n\nimport CalendarModal from './CalendarModal';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport AddNewFab from '../ui/AddNewFab';\nimport DeleteEventFab from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\n// Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nconst CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { uid } = useSelector( state => state.auth );\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    \n    const [lastView, setLastView] = useState( localStorage.getItem('lastView')  || 'month' );\n    \n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n        \n    }, [ dispatch ])\n    \n    const onDoubleClick = ( e ) => {\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = ( e ) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = ( e ) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n    \n    const onSelectSlot = ( e ) => {\n        dispatch( eventClearActiveEvent() );\n    }\n    \n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n    }\n    \n    return (\n        <div className=\"calendar-screen\">\n\n            <Navbar />\n\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            {\n                activeEvent && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n            \n        </div>\n    )\n}\n\nexport default CalendarScreen\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router';\n\nconst PublicRoutes = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            {...rest}\n            component={ (props) => (\n                ( isAuthenticated )\n                ? <Redirect to=\"/\" />\n                : <Component { ... props } />\n            )}\n        />\n    )\n}\n\nexport default PublicRoutes\n\nPublicRoutes.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router';\n\nconst PrivateRoutes = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route \n            {...rest}\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        />\n    )\n}\n\nexport default PrivateRoutes\n\nPrivateRoutes.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\nimport LoginScreen from '../components/auth/LoginScreen';\nimport CalendarScreen from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport PublicRoutes from './PublicRoutes';\nimport PrivateRoutes from './PrivateRoutes';\n\nconst AppRouter = () => {\n\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth );\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n        \n    }, [ dispatch ]);\n    \n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch >\n                    <PublicRoutes\n                        isAuthenticated={ !!uid } // doble exclamación para convertir a booleano\n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <PrivateRoutes\n                        isAuthenticated={ !!uid }\n                        exact\n                        path=\"/\"\n                        component={ CalendarScreen }\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import React from 'react';\nimport { Provider } from 'react-redux'\n\n\nimport store from './store/store';\nimport AppRouter from './router/AppRouter';\n\nconst CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default CalendarApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}